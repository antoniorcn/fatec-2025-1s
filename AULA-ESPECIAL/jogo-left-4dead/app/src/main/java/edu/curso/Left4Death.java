/*
 * This source file was generated by the Gradle 'init' task
 */
package edu.curso;
import javafx.application.Application;
import javafx.embed.swing.SwingFXUtils;
import javafx.event.EventHandler;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.image.Image;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.stage.Stage;
import javafx.scene.layout.StackPane;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.paint.Color;
import javafx.animation.AnimationTimer;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;

public class Left4Death extends Application {

    public static final int WIDTH=800;
    public static final int HEIGHT=600;

    @Override
    public void start(Stage stage) { 
        StackPane pane = new StackPane();
        Scene scn = new Scene(pane, WIDTH, HEIGHT);
        Canvas canvas = new Canvas(WIDTH, HEIGHT);
        GraphicsContext gc = canvas.getGraphicsContext2D();
        Image imgHeroi = null;
        Image imgZombie = null;
        Image imgTiro = null;
        try {
            InputStream isHeroi = Left4Death.class.getResourceAsStream("/images/player.png");
            InputStream isZombie = Left4Death.class.getResourceAsStream("/images/zombies.png");
            InputStream isTiro = Left4Death.class.getResourceAsStream("/images/bullet.png");
            if (isHeroi != null && isZombie != null && isTiro != null) {
                BufferedImage bufHeroi = ImageIO.read(isHeroi)
                        .getSubimage( 0, 0, 168, 168 );
                imgHeroi = SwingFXUtils.toFXImage(bufHeroi, null );

                BufferedImage bufZombie = ImageIO.read(isZombie)
                        .getSubimage( 0, 0, 64, 64 );
                imgZombie = SwingFXUtils.toFXImage(bufZombie, null );

                BufferedImage bufTiro = ImageIO.read(isTiro)
                        .getSubimage( 0, 0, 470, 261 );
                imgTiro = SwingFXUtils.toFXImage(bufTiro, null );
            }
        } catch (IOException e) {
            e.printStackTrace(System.err);
        }

        final Sprite heroi = new Sprite(imgHeroi, 50, 50,64 ,64);
        final SpriteInimigo zombie = new SpriteInimigo(heroi, imgZombie, 600, 400,64 ,64);
        final SpriteTiro tiro = new SpriteTiro(imgTiro, WIDTH, HEIGHT,
                heroi.getX(), heroi.getY(), 12, 8);

        EventHandler<KeyEvent> capturadorEventos = new EventHandler<>() {
            public void handle(KeyEvent e) {
                if (e.getCode() == KeyCode.DOWN) {
                    heroi.setY(heroi.getY() + 10);
                } else if (e.getCode() == KeyCode.LEFT) {
                    heroi.setX(heroi.getX() - 10);
                } else if (e.getCode() == KeyCode.RIGHT) {
                    heroi.setX(heroi.getX() + 10);
                } else if (e.getCode() == KeyCode.UP) {
                    heroi.setY(heroi.getY() - 10);
                } else if (e.getCode() == KeyCode.SPACE) {
                    if (tiro.isFinished()) {
                        tiro.setX(heroi.getX());
                        tiro.setY(heroi.getY());
                        tiro.setFinished(false);
                    }

                }
            }
        };
        canvas.setFocusTraversable( true );
        canvas.addEventFilter(KeyEvent.KEY_PRESSED, capturadorEventos);

        AnimationTimer anim = new AnimationTimer() {
            public void handle(long milisecs) { 
                // Loop do Jogo

                // Calcular as regras
                zombie.update();
                tiro.update();

                if (!tiro.isFinished() && zombie.getRect().intersects( tiro.getRect().getBoundsInLocal() ) ) {
                    zombie.setX( 600 );
                    zombie.setY( 400 );
                    tiro.setFinished( true );
                    heroi.setPontos( heroi.getPontos() + 1);
                    System.out.println("Pontos: " + heroi.getPontos());
                }

                // Desenhar na tela
                gc.setFill(Color.LIGHTGRAY);
                gc.fillRect(0, 0, WIDTH, HEIGHT);
                // gc.setFill(Color.RED);
                // gc.fillRect( 10, 10, 100, 150 );
                gc.drawImage(heroi.getImagem(), heroi.getX(), heroi.getY(), heroi.getW(), heroi.getH());
                gc.drawImage(zombie.getImagem(), zombie.getX(), zombie.getY(), zombie.getW(), zombie.getH());
                if (! tiro.isFinished()) {
                    gc.drawImage(tiro.getImagem(), tiro.getX(), tiro.getY(), tiro.getW(), tiro.getH());
                }

                // Capturar eventos

            }
        };

        anim.start();
    
        pane.getChildren().add( canvas );

        stage.setScene( scn );
        stage.setTitle("Jogo Left 4 Death");
        stage.show();
    }

    public static void main(String[] args) {
        Application.launch(Left4Death.class, args);
    }
}
